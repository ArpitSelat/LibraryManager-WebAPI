// <auto-generated />
using System;
using LibraryManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LibraryManagementSystem.Migrations
{
    [DbContext(typeof(LibraryContext))]
    partial class LibraryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibraryManagementSystem.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("PublicationYear")
                        .HasColumnType("int");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Author = "Robert C. Martin",
                            CreatedDate = new DateTime(2025, 9, 26, 12, 52, 18, 270, DateTimeKind.Local).AddTicks(8994),
                            ISBN = "978-0132350884",
                            IsAvailable = true,
                            PublicationYear = 2008,
                            Publisher = "Prentice Hall",
                            Quantity = 5,
                            Title = "Clean Code"
                        },
                        new
                        {
                            Id = 2,
                            Author = "Erich Gamma, Richard Helm, Ralph Johnson, John Vlissides",
                            CreatedDate = new DateTime(2025, 9, 26, 12, 52, 18, 270, DateTimeKind.Local).AddTicks(9035),
                            ISBN = "978-0201633610",
                            IsAvailable = true,
                            PublicationYear = 1994,
                            Publisher = "Addison-Wesley Professional",
                            Quantity = 3,
                            Title = "Design Patterns"
                        },
                        new
                        {
                            Id = 3,
                            Author = "Andrew Hunt, David Thomas",
                            CreatedDate = new DateTime(2025, 9, 26, 12, 52, 18, 270, DateTimeKind.Local).AddTicks(9039),
                            ISBN = "978-0201616224",
                            IsAvailable = true,
                            PublicationYear = 1999,
                            Publisher = "Addison-Wesley Professional",
                            Quantity = 2,
                            Title = "The Pragmatic Programmer"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
